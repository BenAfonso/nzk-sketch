{"version":3,"file":"nzk-sketch.min.js","sources":["../src/nzk-sketch-stroke-model.js","../src/nzk-sketch-model.js","../src/nzk-sketch.js"],"sourcesContent":["export default class NzkSketchStrokeModel {\n  constructor(style, firstPoint) {\n    this.style = style\n\n    this.points = []\n\n    if (firstPoint) {\n      this.points.push({\n        s: firstPoint,\n        h: null\n      })\n    }\n  }\n\n  length() {\n    return this.points.length\n  }\n\n  lastPoint() {\n    return this.points[this.points.length - 1].s\n  }\n\n  addPoint(newPoint) {\n    this.points[this.points.length - 1].h = {\n      x: (this.points[this.points.length - 1].s.x + newPoint.x) / 2,\n      y: (this.points[this.points.length - 1].s.y + newPoint.y) / 2\n    }\n    return this.points.push({\n      s: newPoint,\n      h: null\n    })\n  }\n\n  serialize() {\n    return {\n      points: this.points,\n      style: this.style\n    }\n  }\n\n  deserialize (serialized) {\n    this.style = serialized.style\n    this.points = serialized.points || []\n  }\n}\n","\nimport NZKSketchStrokeModel from './nzk-sketch-stroke-model'\n\nexport default class NzkSketchModel {\n  constructor() {\n    this.colour = [0, 0, 0]\n    this.eraser = false\n    this.fill = false\n    this.opacity = 1.0\n    this.size = 10\n    this.scale = window.devicePixelRatio >= 1.5 ? 2 : 1\n    this.actions = []\n    this.lastActionIndex = -1\n    this.currentStroke = null\n  }\n\n  sizeScaled() {\n    return this.size * this.scale\n  }\n\n  generateStyleKey() {\n    return `${this.eraser || this.opacity === 1.0 ? 'opaque' : 'transparent'}${this.eraser ? 'Eraser' : 'Colour'}${this.fill ? 'Fill' : 'Stroke'}`\n  }\n\n  getStyle() {\n    return {\n      opacity: this.opacity,\n      colour: this.colour,\n      eraser: this.eraser,\n      size: this.sizeScaled(),\n      key: this.generateStyleKey()\n    }\n  }\n\n  initStroke(newPoint) {\n    if(this.canRedo()){\n      if(this.lastActionIndex === -1){\n        this.actions = []\n      } else {\n        this.actions = this.actions.slice(0, this.lastActionIndex + 1)\n      }\n    }\n\n    this.currentStroke = new NZKSketchStrokeModel(this.getStyle(), newPoint)\n  }\n\n  continueStroke(newPoint) {\n    this.currentStroke.addPoint(newPoint)\n  }\n\n\tsaveStroke() {\n    this.actions.push({type: 'stroke', object: this.currentStroke})\n    this.currentStroke = null\n    this.lastActionIndex++\n  }\n\n  canUndo() {\n    return this.lastActionIndex > -1\n  }\n\n  canRedo() {\n    return this.lastActionIndex < this.actions.length - 1\n  }\n\n  reset() {\n    this.actions = []\n    this.lastActionIndex = -1\n    return this.currentStroke = null\n  }\n\n  serialize(){\n    let serialized = {\n      colour: this.colour,\n      opacity: this.opacity,\n      size: this.size,\n      scale: this.scale,\n      lastActionIndex: this.lastActionIndex\n    }\n\n    serialized.actions = []\n\n    this.actions.forEach(action => {\n      if(action.type === 'stroke'){\n        serialized.actions.push(\n          action.object.serialize()\n        )\n      }\n    })\n\n    if (this.currentStroke) {\n      serialized.currentStroke = this.currentStroke.serialize()\n    }\n\n    return serialized;\n  }\n\n  deserialize(serialized = {}) {\n    if(serialized.colour) {\n      this.colour = serialized.colour\n    }\n    if(serialized.opacity) {\n      this.opacity = serialized.opacity\n    }\n    if(serialized.size) {\n      this.size = serialized.size\n    }\n    if(serialized.scale) {\n      this.scale = serialized.scale\n    }\n    if(serialized.lastActionIndex){\n      this.lastActionIndex = serialized.lastActionIndex\n    }\n    if(serialized.actions){\n      this.actions = []\n\n      serialized.actions.forEach(action => {\n        if(action.type === 'stroke'){\n          let stroke = new NZKSketchStrokeModel()\n          stroke.deserialize(action.object)\n          action.stroke = stroke\n        }\n        this.actions.push(action)\n      })\n    }\n    if(serialized.currentStroke){\n      this.currentStroke = new NZKSketchStrokeModel()\n      this.currentStroke.deserialize(serialized.currentStroke)\n    }\n  }\n}","import NZKSketchModel from './nzk-sketch-model'\n\nexport default class NZKSketch {\n  constructor(props = {}) {\n    if(!props.containerEl){\n      throw new Error(\"NZKSketch requires a containerEl property\")\n    }\n    if(!props.width && props.height){\n      throw new Error(\"NZKSketch requires fixed width and height properties\")\n    }\n\n    this.containerEl = props.containerEl\n\n    // Size\n    this.width = props.containerEl.offsetWidth\n    this.height = props.containerEl.offsetHeight\n    this.scale = window.devicePixelRatio >= 1.5 ? 2 : 1\n    this.widthScaled = this.width * this.scale\n    this.heightScaled = this.height * this.scale\n    \n    // Model init\n    this.model = new NZKSketchModel()\n\n    // Optional props\n    this.setToolType(props.toolType || 'brush')\n    this.setToolColour(props.toolColour || [0, 0, 0])\n    this.setToolSize(props.toolSize || 15)\n    this.setToolOpacity(props.toolOpacity || 1.0 )\n\n    // Canvas layers\n    this.initDrawingCanvas()\n    this.initBufferCanvas()\n    this.initCacheCanvas()\n\n    // Interaction layer\n    this.initInteractionLayer()\n\n    // Drawing settings\n    this.initDrawAnimations()\n    this.setDrawingStyle(this.model.getStyle(), this.bufferCanvasCtx)\n\n    this.isDrawing = false\n  }\n\n  //\n  // Public API\n  //\n\n  setToolType(type) {\n    switch(type) {\n      case 'eraser':\n        this.model.eraser = true\n        this.model.fill = false\n        this.model.opacity = 1.0\n        break\n      case 'fill': \n        this.model.eraser = false\n        this.model.fill = true\n        break\n      default: \n        this.model.eraser = false\n        this.model.fill = false\n    }\n  }\n\n  setToolColour(colour = [0, 0, 0]) {\n    if(this.toolType !== 'eraser') {\n      this.model.colour = colour\n    }\n  }\n\n  setToolSize(size = 15) {\n    this.model.size = size\n  }\n\n  setToolOpacity(opacity = 1.0) {\n    if(this.toolType !== 'eraser') {\n      this.model.opacity = opacity\n    }\n  }\n\n  export(options = {}) {\n    if(options.crop){\n      const box = this.findBoundingBox()\n    \n      this.initCutCanvas()\n  \n      this.cutCanvas.setAttribute('width', box.width)\n      this.cutCanvas.setAttribute('height', box.height)\n      this.cutCanvasCtx.globalCompositeOperation = 'copy'\n      this.cutCanvasCtx.drawImage(this.drawingCanvasCtx.canvas, box.topLeftX, box.topLeftY, box.width, box.height, 0, 0, box.width, box.height)\n  \n      let image = this.cutCanvas.toDataURL()\n      \n      this.removeCutCanvas()\n  \n      return image\n    } else {\n      this.drawingCanvas.toDataURL()\n    }\n  }\n\n  undo() {\n    if(!this.model.canUndo()) return\n\n    this.model.lastActionIndex--\n    this.drawingCanvasCtx.clearRect(0, 0, this.widthScaled, this.heightScaled)\n\n    for(let i = 0; i <= this.model.lastActionIndex; i++) {\n      this.drawUndoStroke(this.model.actions[i].object)\n    }\n  }\n\n\tredo() {\n    if(!this.model.canRedo()) return \n\n\t\tthis.model.lastActionIndex++\n\n\t\tlet action = this.model.actions[this.model.lastActionIndex]\n\n\t\tthis.drawUndoStroke(action.object)\n  }\n\n  canUndo() {\n    return this.model.canUndo()\n  }\n\n  canRedo() {\n    return this.model.canRedo()\n  }\n  \n  restart() {\n    this.model.reset()\n    \n    this.drawingCanvasCtx.clearRect(0, 0, this.widthScaled, this.heightScaled)\n  }\n\n  //\n  // Internal helpers\n  //\n\n  setCanvasSize(canvas){\n    canvas.width = this.widthScaled\n    canvas.height = this.heightScaled\n  }\n\n  setLayerStyle(el){\n    el.style.width = `${this.width}px`\n    el.style.height = `${this.height}px`\n    el.style.position = 'absolute'\n    el.style.left = '0px'\n    el.style.top = '0px'\n  }\n\n  initDrawingCanvas() {\n    this.drawingCanvas = document.createElement('canvas')\n    this.drawingCanvasCtx = this.drawingCanvas.getContext('2d')\n    this.setCanvasSize(this.drawingCanvas)\n    this.setLayerStyle(this.drawingCanvas)\n    this.drawingCanvas.style.zIndex = 1\n    this.containerEl.appendChild(this.drawingCanvas)\n  }\n\n  initBufferCanvas() {\n    this.bufferCanvas = document.createElement('canvas')\n    this.bufferCanvasCtx = this.bufferCanvas.getContext('2d')\n    this.setCanvasSize(this.bufferCanvas)\n    this.setLayerStyle(this.bufferCanvas)\n    this.bufferCanvas.style.zIndex = 2\n    this.containerEl.appendChild(this.bufferCanvas)\n  }\n\n  initCacheCanvas() {\n    this.cacheCanvas = document.createElement('canvas')\n    this.cacheCanvasCtx = this.cacheCanvas.getContext('2d')\n    this.setCanvasSize(this.cacheCanvas)\n    this.setLayerStyle(this.cacheCanvas)\n    this.cacheCanvas.style.display = 'none'\n    this.containerEl.appendChild(this.cacheCanvas)\n  }\n\n  initCutCanvas() {\n    this.cutCanvas = document.createElement('canvas')\n    this.cutCanvasCtx = this.cutCanvas.getContext('2d')\n    this.setCanvasSize(this.cutCanvas)\n    this.setLayerStyle(this.cutCanvas)\n    this.cutCanvas.style.display = 'none'\n    this.containerEl.appendChild(this.cutCanvas)\n  }\n\n  removeCutCanvas() {\n    this.cutCanvas.remove()\n  }\n\n  initInteractionLayer() {\n    this.interactionLayerEl = document.createElement('div')\n    this.setLayerStyle(this.interactionLayerEl)\n    this.interactionLayerEl.style.zIndex = 3\n\n    this.onStartMouseDraw = this.onStartMouseDraw.bind(this)\n    this.onMoveMouseDraw = this.onMoveMouseDraw.bind(this)\n    this.onEndMouseDraw = this.onEndMouseDraw.bind(this)\n\n    this.interactionLayerEl.addEventListener(\"mousedown\", this.onStartMouseDraw, false)\n    this.interactionLayerEl.addEventListener(\"mousemove\", this.onMoveMouseDraw, false)\n    this.interactionLayerEl.addEventListener(\"mouseup\", this.onEndMouseDraw, false)\n    this.interactionLayerEl.addEventListener(\"mouseleave\", this.onEndMouseDraw, false)\n    this.interactionLayerEl.addEventListener(\"mouseenter\", (ev) => {\n      if (ev.buttons > 0) {\n        this.onStartMouseDraw(ev)\n      }\n    }, false)\n\n    this.onStartTouchDraw = this.onStartTouchDraw.bind(this)\n    this.onMoveTouchDraw = this.onMoveTouchDraw.bind(this)\n    this.onEndTouchDraw = this.onEndTouchDraw.bind(this)\n\n    this.interactionLayerEl.addEventListener(\"touchstart\", this.onStartTouchDraw, false)\n    this.interactionLayerEl.addEventListener(\"touchmove\", this.onMoveTouchDraw, false)\n    this.interactionLayerEl.addEventListener(\"touchend\", this.onEndTouchDraw, false)\n\n    this.containerEl.appendChild(this.interactionLayerEl)\n  }\n\n  initDrawAnimations(){\n    this.drawUndo = {\n\t\t\ttransparentEraserFill: this.drawTransparentFillFinal,\n\t\t\ttransparentEraserStroke: this.drawStrokeFinal,\n\t\t\ttransparentColourFill: this.drawTransparentFillFinal,\n\t\t\ttransparentColourStroke: this.drawStrokeFinal,\n\t\t\topaqueEraserFill: this.drawEraserUndoingFillFinal,\n\t\t\topaqueEraserStroke: this.drawEraserUndoingFinal,\n\t\t\topaqueColourFill: this.drawFillFinal,\n      opaqueColourStroke: this.drawStrokeFinal\n    }\n\n\t\tthis.drawFinished = {\n\t\t\ttransparentEraserFill: this.drawTransparentFillFinal,\n\t\t\ttransparentEraserStroke: this.drawStrokeFinal,\n\t\t\ttransparentColourFill: this.drawTransparentFillFinal,\n\t\t\ttransparentColourStroke: this.drawStrokeFinal,\n\t\t\topaqueEraserFill: this.drawEraserFillFinal,\n\t\t\topaqueEraserStroke: this.drawEraser,\n\t\t\topaqueColourFill: this.drawFillFinal,\n      opaqueColourStroke: this.drawStrokeFinal\n    }\n\n\t\tthis.drawAnimation = {\n\t\t\ttransparentEraserFill: this.drawFillAndStroke,\n\t\t\ttransparentEraserStroke: this.drawFillAndStroke,\n\t\t\ttransparentColourFill: this.drawFillAndStroke,\n\t\t\ttransparentColourStroke: this.drawFillAndStroke,\n\t\t\topaqueEraserFill: this.drawEraser,\n\t\t\topaqueEraserStroke: this.drawEraser,\n\t\t\topaqueColourFill: this.drawFillAndStroke,\n      opaqueColourStroke: this.drawFillAndStroke\n    }\n  }\n\n  getMousePoint (ev) {\n    let rect = this.interactionLayerEl.getBoundingClientRect()\n\n    return {\n      x: (ev.clientX - rect.left) * this.scale,\n      y: (ev.clientY - rect.top) * this.scale\n    }\n  }\n\n  getTouchPoint (ev) {\n    let rect = this.interactionLayerEl.getBoundingClientRect()\n\n    return {\n      x: (ev.touches[0].clientX - rect.left) * this.scale,\n      y: (ev.touches[0].clientY - rect.top) * this.scale\n    }\n  }\n\n  onStartMouseDraw(ev) {\n    ev.preventDefault() // prevents scroll\n    this.startDraw(this.getMousePoint(ev))\n  }\n\n  onStartTouchDraw(ev) {\n    ev.preventDefault() // prevents scroll\n    this.startDraw(this.getTouchPoint(ev))\n  }\n\n  onMoveMouseDraw(ev) {\n    this.continueDraw(this.getMousePoint(ev))\n  }\n\n  onMoveTouchDraw(ev) {\n    this.continueDraw(this.getTouchPoint(ev))\n  }\n\n  onEndMouseDraw(ev) {\n    this.endDraw(this.getMousePoint(ev))\n  }\n\n  onEndTouchDraw(ev) {\n    this.endDraw(this.getTouchPoint(ev))\n  }\n\n  startDraw(point) {\n    this.isDrawing = true\n\n\t\tthis.model.initStroke(point)\n\n\t\tif(this.model.currentStroke.style.eraser && this.model.currentStroke.style.opacity === 1.0) {\n      this.cacheCanvasCtx.globalCompositeOperation = \"copy\"\n\t\t\tthis.cacheCanvasCtx.drawImage(this.drawingCanvasCtx.canvas, 0, 0, this.widthScaled, this.heightScaled)\n      this.setDrawingStyle(this.model.currentStroke.style, this.drawingCanvasCtx)\n    }\n\n\t  this.setDrawingStyle(this.model.currentStroke.style, this.bufferCanvasCtx)\n\t\tthis.strokeAnimation() \n  }\n\n  continueDraw(point) {\n    if(!this.isDrawing) return false\n    this.model.continueStroke(point)\n  }\n\n  endDraw(point) {\n    if(!this.model.currentStroke) return\n    this.isDrawing = false\n    this.endStrokeAnimation() \n    this.bufferCanvasCtx.clearRect(0, 0, this.widthScaled, this.heightScaled)\n    this.drawFinishedStroke(this.model.currentStroke)\n    this.model.saveStroke()\n  }\n\n  setDrawingStyle (style, ctx) {\n\t\tlet colour = `rgba(${style.colour[0]}, ${style.colour[1]}, ${style.colour[2]}, ${style.opacity})`\n\t\tctx.strokeStyle = colour\n\t\tctx.fillStyle = colour\n\t\tctx.lineWidth = style.size\n\t\tctx.lineJoin = \"round\"\n    ctx.lineCap = \"round\"\n  }\n\n\tstrokeAnimation() {\n    this.drawAnimationStroke(this.model.currentStroke)\n\t\tthis.reqStroke = window.requestAnimationFrame(() => this.strokeAnimation.apply(this))\n  }\n\n\tdrawAnimationStroke(stroke) {\n    this.drawAnimation[stroke.style.key].apply(this, [stroke])\n  }\n\n\tendStrokeAnimation() {\n\t\twindow.cancelAnimationFrame(this.reqStroke)\n    this.reqStroke = 0\n  }\n\n  drawUndoStroke(stroke) {\n\t\tthis.setDrawingStyle(stroke.style, this.drawingCanvasCtx)\n    this.drawUndo[stroke.style.key].apply(this, [stroke])\n  }\n\n\tdrawFinishedStroke(stroke) {\n    if(!stroke) return\n\t\tthis.setDrawingStyle(stroke.style, this.drawingCanvasCtx)\n    this.drawFinished[stroke.style.key].apply(this, [stroke])\n  }\n\n\tdrawExistingStroke(stroke) {\n\t\tthis.setDrawingStyle(stroke.style, this.drawingCanvasCtx)\n    this.drawFinished[stroke.style.key].apply(this, [stroke, false])\n  }\n  \n  trace(stroke, ctx) {\n    let nbPoints = stroke.length()\n    \n    ctx.beginPath()\n    \n    if(nbPoints < 3) {\n      ctx.moveTo(stroke.points[0].s.x, stroke.points[0].s.y)\n      ctx.lineTo(stroke.points[nbPoints-1].s.x + 0.001, stroke.points[nbPoints-1].s.y + 0.001)\n    } else {\n      ctx.moveTo(stroke.points[0].s.x, stroke.points[0].s.y)\n      \n      var i, len, move, ref\n\n      ref = stroke.points.slice(1, +(nbPoints - 2) + 1 || 9e9)\n      for (i = 0, len = ref.length; i < len; i++) {\n        move = ref[i]\n        ctx.quadraticCurveTo(move.s.x, move.s.y, move.h.x, move.h.y)\n      }\n    }\n  }\n\n\tdrawTransparentFillFinal(stroke) {\n\t\tthis.cacheCanvasCtx.clearRect(0, 0, this.widthScaled, this.heightScaled)\n    this.cacheCanvasCtx.globalCompositeOperation = \"source-over\"\n    stroke.style.opacity = stroke.style.opacity || 1\n\t\tthis.setDrawingStyle(stroke.style, this.cacheCanvasCtx)\n\t\tthis.trace(stroke, this.cacheCanvasCtx)\n\t\tthis.cacheCanvasCtx.closePath()\n\t\tthis.cacheCanvasCtx.fill()\n\t\tthis.cacheCanvasCtx.stroke()\n\n\t\tthis.drawingCanvasCtx.globalCompositeOperation = \"source-over\"\n\t\tthis.drawingCanvasCtx.globalAlpha = stroke.style.opacity\n\t\tthis.drawingCanvasCtx.drawImage(this.cacheCanvasCtx.canvas, 0, 0, this.widthScaled, this.heightScaled)\n    this.drawingCanvasCtx.globalAlpha = 1.0\n  }\n\n\tdrawStrokeFinal(stroke) {\n\t\tthis.drawingCanvasCtx.globalCompositeOperation = \"source-over\"\n\t\tthis.trace(stroke, this.drawingCanvasCtx)\n    this.drawingCanvasCtx.stroke()\n  }\n\n\tdrawFillFinal(stroke) {\n\t\tthis.drawingCanvasCtx.globalCompositeOperation = \"source-over\"\n\t\tthis.trace(stroke, this.drawingCanvasCtx)\n\t\tthis.drawingCanvasCtx.closePath()\n\t\tthis.drawingCanvasCtx.fill()\n    this.drawingCanvasCtx.stroke()\n  }\n\n\tdrawFillAndStroke(stroke) {\n\t\tthis.bufferCanvasCtx.clearRect(0, 0, this.widthScaled, this.heightScaled)\n\t\tthis.trace(stroke, this.bufferCanvasCtx)\n    this.bufferCanvasCtx.stroke()\n  }\n\n\tdrawEraserUndoingFinal(stroke) {\n\t\tthis.drawingCanvasCtx.globalCompositeOperation = \"destination-out\"\n\t\tthis.trace(stroke, this.drawingCanvasCtx)\n    this.drawingCanvasCtx.stroke()\n  }\n\n\tdrawEraserUndoingFillFinal(stroke) {\n\t\tthis.drawingCanvasCtx.globalCompositeOperation = \"destination-out\"\n\t\tthis.trace(stroke, this.drawingCanvasCtx)\n\t\tthis.drawingCanvasCtx.closePath()\n\t\tthis.drawingCanvasCtx.fill()\n    this.drawingCanvasCtx.stroke()\n  }\n\n\tdrawEraser(stroke, copy = true) {\n\t\tif(copy){\n\t\t\tthis.drawingCanvasCtx.globalCompositeOperation = \"copy\"\n      this.drawingCanvasCtx.drawImage(this.cacheCanvasCtx.canvas, 0, 0, this.widthScaled, this.heightScaled)\n    }\n\n\t\tthis.drawingCanvasCtx.globalCompositeOperation = \"destination-out\"\n\t\tthis.trace(stroke, this.drawingCanvasCtx)\n    this.drawingCanvasCtx.stroke()\n  }\n\n\tdrawEraserFillFinal(stroke, copy = true){\n\t\tif(copy) {\n\t\t\tthis.drawingCanvasCtx.globalCompositeOperation = \"copy\"\n      this.drawingCanvasCtx.drawImage(this.cacheCanvasCtx.canvas, 0, 0, this.widthScaled, this.heightScaled)\n    }\n\n\t\tthis.drawingCanvasCtx.globalCompositeOperation = \"destination-out\"\n\t\tthis.trace(stroke, this.drawingCanvasCtx)\n\t\tthis.drawingCanvasCtx.closePath()\n\t\tthis.drawingCanvasCtx.fill()\n    this.drawingCanvasCtx.stroke()\n  }\n\n  findBoundingBox() {\n    let imageData = this.drawingCanvasCtx.getImageData(0, 0, this.widthScaled, this.heightScaled)\n\n    let box = {\n      topLeftX: this.widthScaled,\n      topLeftY: this.heightScaled,\n      bottomRightX: 0,\n      bottomRightY: 0\n    }\n\n    for(let x = 0; x < this.widthScaled; x++){\n      for(let y = 0; y < this.heightScaled; y++){\n        let pixelPosition = (((y * this.widthScaled) + x) * 4) + 3\n\n        if(imageData.data[pixelPosition] > 0){\n          if(x < box.topLeftX) box.topLeftX = x\n          if(y < box.topLeftY) box.topLeftY = y\n          if(x > box.bottomRightX) box.bottomRightX = x\n          if(y > box.bottomRightY) box.bottomRightY = y\n        }\n      }\n    }\n\n    box.width = box.bottomRightX - box.topLeftX\n    box.height = box.bottomRightY - box.topLeftY\n\n    return box\n  }\n}"],"names":["NzkSketchStrokeModel","style","firstPoint","points","push","s","h","this","length","newPoint","x","y","serialized","NzkSketchModel","colour","eraser","fill","opacity","size","scale","window","devicePixelRatio","actions","lastActionIndex","currentStroke","sizeScaled","key","generateStyleKey","canRedo","slice","NZKSketchStrokeModel","getStyle","addPoint","type","object","forEach","action","serialize","stroke","deserialize","_this","props","containerEl","Error","width","height","offsetWidth","offsetHeight","widthScaled","heightScaled","model","NZKSketchModel","setToolType","toolType","setToolColour","toolColour","setToolSize","toolSize","setToolOpacity","toolOpacity","initDrawingCanvas","initBufferCanvas","initCacheCanvas","initInteractionLayer","initDrawAnimations","setDrawingStyle","bufferCanvasCtx","isDrawing","crop","box","findBoundingBox","initCutCanvas","cutCanvas","setAttribute","cutCanvasCtx","globalCompositeOperation","drawImage","drawingCanvasCtx","canvas","topLeftX","topLeftY","image","toDataURL","removeCutCanvas","drawingCanvas","canUndo","clearRect","i","drawUndoStroke","reset","el","position","left","top","document","createElement","getContext","setCanvasSize","setLayerStyle","zIndex","appendChild","bufferCanvas","cacheCanvas","cacheCanvasCtx","display","remove","interactionLayerEl","onStartMouseDraw","bind","onMoveMouseDraw","onEndMouseDraw","addEventListener","ev","buttons","onStartTouchDraw","onMoveTouchDraw","onEndTouchDraw","drawUndo","transparentEraserFill","drawTransparentFillFinal","transparentEraserStroke","drawStrokeFinal","transparentColourFill","transparentColourStroke","opaqueEraserFill","drawEraserUndoingFillFinal","opaqueEraserStroke","drawEraserUndoingFinal","opaqueColourFill","drawFillFinal","opaqueColourStroke","drawFinished","drawEraserFillFinal","drawEraser","drawAnimation","drawFillAndStroke","rect","getBoundingClientRect","clientX","clientY","touches","preventDefault","startDraw","getMousePoint","getTouchPoint","continueDraw","endDraw","point","initStroke","strokeAnimation","continueStroke","endStrokeAnimation","drawFinishedStroke","saveStroke","ctx","strokeStyle","fillStyle","lineWidth","lineJoin","lineCap","drawAnimationStroke","reqStroke","requestAnimationFrame","_this2","apply","cancelAnimationFrame","len","move","ref","nbPoints","beginPath","moveTo","lineTo","quadraticCurveTo","trace","closePath","globalAlpha","imageData","getImageData","bottomRightX","bottomRightY","pixelPosition","data"],"mappings":"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"}